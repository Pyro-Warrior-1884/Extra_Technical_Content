class LinkedList:
    def __init__(self):
        self.head = None
        self.size = 0
        
    def add_begin(self,data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
        
    def add_end(self,data):
        new_node = Node(data)
        current_node = self.head
        
        if self.head is None:
            self.head = new_node
        else: 
            while current_node.next is not None:
                current_node = current_node.next
            current_node.next = new_node
        
        
    def display(self):
        present_node = self.head
        while present_node is not None:
            print(present_node.data," ",end = '')
            present_node = present_node.next
        print("\n") 
        
    def delete_n_node(self,n):
        present_node = self.head
        while present_node is not None:
            self.size = self.size +1
            present_node = present_node.next
        num = self.size - n
        present_node = self.head
        for i in range(0,num-1,1):
            present_node = present_node.next
        present_node.next = present_node.next.next
        self.display()
        
        
        


class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
        
        
LL = LinkedList()
LL.add_begin(6)
LL.add_begin(5)
LL.add_begin(4)
LL.add_begin(3)
LL.add_begin(2)
LL.add_begin(1)
LL.display()
LL.delete_n_node(4)










