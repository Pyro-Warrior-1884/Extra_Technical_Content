
class LinkedList:
    def __init__(self):
        self.head = None
        
    def add_begin(self,data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
        
    def add_end(self,data):
        new_node = Node(data)
        current_node = self.head
        
        if self.head is None:
            self.head = new_node
        else: 
            while current_node.next is not None:
                current_node = current_node.next
            current_node.next = new_node
        
        
    def display(self):
        present_node = self.head
        while present_node is not None:
            print(present_node.data," ",end = '')
            present_node = present_node.next
        print("\n") 
        


class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
        

def mergedsortedlist(list1,list2):
    LL3 = LinkedList()
    current_node1 = list1.head
    current_node2 = list2.head
      
        
    while current_node1 is not None or current_node2 is not None:
        
        if current_node1 is None:
            while current_node2 is not None:
                LL3.add_end(current_node2.data)
                current_node2 = current_node2.next
                
        elif current_node2 is None:
            while current_node1 is not None:
                LL3.add_end(current_node1.data)
                current_node1 = current_node1.next
                
        elif current_node1.data > current_node2.data:
            LL3.add_end(current_node2.data)
            current_node2 = current_node2.next
            
        elif current_node1.data < current_node2.data:
            LL3.add_end(current_node1.data)
            current_node1 = current_node1.next  
        
        else:
            LL3.add_end(current_node1.data)
            current_node1 = current_node1.next  
            LL3.add_end(current_node2.data)
            current_node2 = current_node2.next 
            
    LL3.display()
    
def mergedsortedlist2(list1, list2):
    
    
    
    
LL1 = LinkedList()
LL1.add_begin(6)
LL1.add_begin(4)
LL1.add_begin(2)
LL1.display()
LL2 = LinkedList()
LL2.add_begin(7)
LL2.add_begin(5)
LL2.add_begin(3)
LL2.add_begin(1)
LL2.display()
mergedsortedlist2(LL1,LL2)

